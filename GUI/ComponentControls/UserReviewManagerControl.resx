<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="lblOrderAccount.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAALAAAACwARRqq2kAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAADSUlEQVRYR53XS4hOYRgH8HcY12GMhbEcQ2bKJTsru0mRkWGhIVnNWopBuWZ2YqOUoZQS0WzIgo0V
        UuNedphErgsJ4974/9/vOV//732fM2a89atznsv7fucy55wJIyMjY4bRDGvgIFyB14bbjDHX7PWWcYMp
        jHo4AD+BgdGwhrX13lwpN6gwlsI90EXGgj1LvTmVGyxg9MAP0InHg7093twFN0gYPPLRFv8F62Ej/LGY
        5zss9tYgPxjCJLgPOlHqiNQfl7hnENx7IgvEYAiHrbHMEEyHyWYmvAKvtrDPXSsLhDAXeHq1Wf2G1Va7
        n2y7C5jTWsXLOVvXin1ZIIS11qB4OY4C/84brW4hfDMLLTYLOuEYeJdwpa4Ve7JACIekgU4keZ5u/pDH
        UNQ8glUwI6k9BUUN7dF8rMkCIVyVBroGdZY7DaNdHub6rbYO2Kv5AV0r1mWBEN5IQ6HPcq3wwWKed9Bi
        tX0WU0O6VqzLAuV382bLd0gstcJqNktMPdW1Ym0WCOGyNCg+UIqj+2gx9dZyLcDaNE8Xda1YnwUqLxJt
        Um1W490Hw5Zrk1hql64V67NA5Q7XJjUHGuAz9MNyw23GpgFrvF7qyNbLApV3ftlrl69lPqbjsyDpa7Q8
        pX3Ey9KU9aWBGAxhrzUpThCf5xg8C3xT3jXcbrAcf4B3D/TqGoUsEIMhTIQ71qjOwkn4JLECY8yxJs3d
        ggnuWl6QMHgzDYNO9D++QnxUe/IAfim02nY3fIFisvFib7fNNR/iE1XV7MRAZdGXMM/2F8BN4M54sGeB
        zcEXF5+wXbpWzNXsVI7+CXDnGbRLvBfKHjCKNayN1xxjEbwA7jyAmrOQ/gAePTcKvAe2QfEyagI+infD
        JXhuuM0Yc/FPDYMvo+3A17XOWXMWdHE9+hS/cLfCFG32sMZqy76ka86CNqZH73kPF2AHLJHeZbATmGNN
        2pdaV+2VSf71EZrqlN4NEh+L29VemWQAeAOpso+PwaLPenm9H1ouxTnSec9Ve3WiFEY78CWjE1L16KWW
        H6VpHXvjG7SMG1QYW2yyQs3RK4z0xtvk1Sk3mMI4I5NmR1/A0C/qk15Nyg2mMPhPyA2oXrsyGOfhOkz1
        8rVGwl9j+47mDkQ+/wAAAABJRU5ErkJggg==
</value>
  </data>
</root>